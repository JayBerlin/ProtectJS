var protect;!function(){"use strict";function incrementID(){id++}function resetPrivateID(){privateID=0}function resetCallerID(){callerID=void 0}function storeOriginal(t,e){originalPrototypes[e]=t}function eachKeys(t,e,r){r||"function"!=typeof e||(r=e,e=!1);for(var o in t.prototype)0===o.indexOf("_")&&"function"==typeof t.prototype[o]?r("PRIVATE",t,o):e&&r("PUBLIC",t,o)}function getPrivateReferences(t){var e=[],r=t.toString();for(var o in privateKeys)-1!=r.indexOf(o+"(")&&e.push(o);return e}function buildMethod(id,object,parser){var fn=object.toString(),keys=getPrivateReferences(object),parse=!1;if(protect.options.obfuscatePrivateMethods&&keys.length){for(var i=0;i<keys.length;i++)fn=fn.replace(new RegExp(keys[i],"g"),privateKeys[keys[i]]);parse=!0}-1!=fn.indexOf("setTimeout(")&&(fn=fn.replace(/setTimeout\(/g,"protectedSetTimeout("+id+", "),parse=!0),parse&&eval("object = "+fn),parser(object,keys.length>0)}function protectedSetTimeout(t,e,r){return setTimeout(function(){callerID=t;try{e.apply(this,arguments)}catch(r){throw resetCallerID(),r}resetCallerID()},r)}function protect_constructor(t,e){var r,o,n=e.prototype;return buildMethod(t,e,function(i,c){c?(o=function(){callerID=t;try{r=i.apply(this,arguments)}catch(e){throw resetCallerID(),e}return resetCallerID(),r},o.prototype=n):o=e}),o.pjsID="pjs_"+t,o}function protect_public(t,e,r){buildMethod(t,e.prototype[r],function(o,n){if(n){var i;e.prototype[r]=function(){i=void 0,callerID=t;try{i=o.apply(this,arguments)}catch(e){throw resetCallerID(),e}return resetCallerID(),i}}e.prototype[r].toString=function(){return"function () {}"}})}function protect_private(t,e,r){buildMethod(t,e.prototype[r],function(o){(e.prototype[protect.options.obfuscatePrivateMethods?privateKeys[r]:r]=function(){if(callerID===t)return o.apply(this,arguments);throw"You cannot call a private method"}).toString=function(){return"Protected by ProtectJS"},protect.options.obfuscatePrivateMethods&&delete e.prototype[r]})}function extend_override(t,e,r){var o,n=originalPrototypes[t.pjsID];if(!n)throw"You cannot use 'protect.extend' to extend an object that has not already been protected";for(o in e){if(n[o]&&!r)throw"Trying to extend object failed because object already contains '"+o+"'. Use 'protect.override' instead";if(!n[o]&&r)throw"Trying to override method '"+o+"' failed because method does not exist";if("function"!=typeof e[o])throw"You can only extend protected objects with methods";n[o]=e[o]}for(o in n)t.prototype[o]=n[o];protect(t,t.pjsID)}var callerID,privateID,privateKeys={},originalPrototypes={},id=0;protect=function(t,e){var r=void 0!==e;incrementID(),resetPrivateID(),e=e||"pjs_"+id;var o={};for(var n in t.prototype)o[n]=t.prototype[n];return storeOriginal(o,e),eachKeys(t,function(t,e,r){privateKeys[r]="_"+privateID++}),r||(t=protect_constructor(id,t)),eachKeys(t,!0,function(t,e,r){switch(t){case"PUBLIC":protect_public(id,e,r);break;case"PRIVATE":protect_private(id,e,r)}}),t},protect.extend=function(t,e){extend_override(t,e)},protect.override=function(t,e){extend_override(t,e,!0)},protect.options={obfuscatePrivateMethods:!1}}();